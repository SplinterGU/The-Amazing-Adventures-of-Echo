        //movimientos verticales
        if (enem_p_dir == 2)    //movimiento hacia abajo
            //say("enem_p_dir = 2");
            switch (enem_dur[1][2])
            //no se puede
            case 1,4,5,25,51,54,55,75,
                 105:                       //especial (extra) ********** CAMBIAR ********************************
                enem_mover_v = 0;
                vel_vert = 0;
                y3 += (id_tscroll.tmapa[0].alto_tile - 1 - enem_offsy) * resolution3;
                if (enem_estado == 3) enem_estado = 0; end
            end //no se puede
            //si se puede
            default:
                //ATENCIÓN, puede que estemos tan abajo (por ejemplo, en el pico de una rampa) que parezca que
                //podemos bajar, así que, antes, hay que evitar esto
                switch (enem_dur[1][1])
                //estamos en peligro de atravesar el suelo
                case 2,3,13,15,52,53,63,65:
                    p_libre = false;
                end
                //caso especial: rampas transpasables, debemos asegurarnos que no vamos por debajo
                case 26,76:
                    if (enem_offsy < enem_offsx)
                        p_libre = false;
                    else
                        p_libre = true;
                    end
                end
                case 27,77:
                    if (enem_offsy < (id_tscroll.tmapa[0].alto_tile - 1 - enem_offsx))
                        p_libre = false;
                    else
                        p_libre = true;
                    end
                end
                case 28,78:
                    if (enem_offsy < ((id_tscroll.tmapa[0].alto_tile / 2) - 1 + (enem_offsx / 2)) )
                        p_libre = false;
                    else
                        p_libre = true;
                    end
                end
                case 29,79:
                    if (enem_offsy < (enem_offsx / 2) )
                        p_libre = false;
                    else
                        p_libre = true;
                    end
                end
                case 30,80:
                    if (enem_offsy < ((id_tscroll.tmapa[0].alto_tile - 1) -
                        ((id_tscroll.tmapa[0].alto_tile / 2) - 1 + (enem_offsx / 2))) )
                        p_libre = false;
                    else
                        p_libre = true;
                    end
                end
                case 31,81:
                    if (enem_offsy < ((id_tscroll.tmapa[0].alto_tile - 1) - (enem_offsx / 2)) )
                        p_libre = false;
                    else
                        p_libre = true;
                    end
                end
                //no hay peligro
                default:
                    p_libre = true; 
                end
                end
                
                //ahora hay que mirar que no estemos pisando un borde de las casillas diagonales bajas
                if (p_libre)
                    //pegado a la izquierda
                    if (enem_offsx < 4)
                        switch (enem_dur[0][2])
                        case 1,3,4,5,16,25,51,53,54,55,66,75,           //normales
                             27,31,77,81:                               //extras
                            //excepción: debajo hay una rampa
                            switch (enem_dur[1][2])
                            case 2,14,52,64,            //normales
                                 26,29,76,79:           //extras
                                p_libre = true;
                            end
                            default: p_libre = false; end
                            end //switch
                        end
                        end //switch
                    end
                    //pegado a la derecha
                    if (enem_offsx > 11)
                        switch (enem_dur[2][2])
                        case 1,2,4,5,14,25,51,52,54,55,64,75,           //normales
                             26,29,76,79:                               //extras
                            //excepción: debajo hay una rampa
                            switch (enem_dur[1][2])
                            case 3,16,53,66,            //normales
                                 27,31,77,81:           //extras
                                p_libre = true;
                            end
                            default: p_libre = false; end
                            end //switch
                        end
                        end //switch
                    end
                end
                
                //y actuamos en consecuencia
                if (p_libre)
                    enem_mover_v--;
                    enem_estado = 3;
                    //actualizamos casilla actual
                    enem_dur[0][0] = enem_dur[0][1];
                    enem_dur[1][0] = enem_dur[1][1];
                    enem_dur[2][0] = enem_dur[2][1];
                    enem_dur[0][1] = enem_dur[0][2];
                    enem_dur[1][1] = enem_dur[1][2];
                    enem_dur[2][1] = enem_dur[2][2];
                    enem_dur[0][2] = obtener_tile(&durezas, enem_tilex - 1, enem_tiley + 2, 0);
                    enem_dur[1][2] = obtener_tile(&durezas, enem_tilex    , enem_tiley + 2, 0);
                    enem_dur[2][2] = obtener_tile(&durezas, enem_tilex + 1, enem_tiley + 2, 0);
                    //limitamos movimientos laterales si el nuevo techo no nos deja avanzar
                    switch (enem_dur[0][0])
                    case 1,2,3,4,13,14,15,16,51,52,53,54,63,64,65,66,   //normales
                         34,84:                                         //extras
                        if ((vel_horiz < 0) && ((enem_offsx + vel_horiz) < 4))
                            enem_mover_h = 0;
                            vel_horiz = 0;
                            x3 += (4 - enem_offsx) * resolution3;
                        end
                    end
                    end //switch
                    switch (enem_dur[2][0])
                    case 1,2,3,5,13,14,15,16,51,52,53,55,63,64,65,66,   //normales
                         33,83:                                         //extras
                        if ((vel_horiz > 0) && ((enem_offsx + vel_horiz) > 11))
                            enem_mover_h = 0;
                            vel_horiz = 0;
                            x3 += (11 - enem_offsx) * resolution3;
                        end
                    end
                    end //switch
                else
                    enem_mover_v = 0;
                    enem_estado = 0;
                    vel_vert = 0;
                    y3 += (id_tscroll.tmapa[0].alto_tile - 1 - enem_offsy) * resolution3;
                end
                
            end //si se puede
            end //switch mirar tile abajo
        end //movimiento hacia abajo
        
        //p_libre=true;
        if (enem_p_dir == 8)       //movimiento hacia arriba
            //say("enem_p_dir = 8");
            //comprobamos la casilla superior
            switch (enem_dur[1][0])
            //no se puede
            case 1,2,3,13,14,15,16,51,52,53,63,64,65,66,        //normales
                 32,82:                                         //extras
                p_libre = false;
            end //no se puede
            //se puede
            default:
                p_libre=true;
                //comprobando no chocarse con los bordes de las casillas diagonales
                if (enem_offsx < 4)
                    switch (enem_dur[0][0])
                    case 1,3,4,14,15,16,51,53,54,64,65,66:              //normales
                         //32,82:                                         //extras
                        p_libre = false;
                    end
                    //hay una excepción: estamos en una rampa y en diagonal hay otra que la continua
                    case 2,13,52,63,                                    //normales
                         32,82:                                         //extras
                        switch (enem_dur[1][1])
                        case 2,14,52,64,                //normales
                             26,29,76,79:               //extras
                            p_libre = true;
                        end
                        default: p_libre = false; end
                        end //switch
                    end
                    end //switch
                end //pegado a la izquierda
                if (enem_offsx > 11)
                    switch (enem_dur[2][0])
                    case 1,2,5,13,14,16,51,52,55,63,64,66:              //normales
                         //32,82:                                         //extras
                        p_libre = false;
                    end
                    //hay una excepción: estamos en una rampa y en diagonal hay otra que la continua
                    case 3,15,53,65,                                    //normales
                         32,82:                                         //extras
                        switch (enem_dur[1][1])
                        case 3,16,53,66,                //normales
                             27,31,77,81:               //extras
                            p_libre = true;
                        end
                        default: p_libre = false; end
                        end //switch
                    end
                    end //switch
                end //pegado a la derecha
            end
            end //switch mirar tile arriba
            
            //say("p_libre = " + itoa(p_libre));
            //say("vel_vert = " + itoa(vel_vert));
            //y actuamos en consecuencia
            if (p_libre)
                enem_mover_v++;
                //actualizamos casilla actual
                enem_dur[0][2] = enem_dur[0][1];
                enem_dur[1][2] = enem_dur[1][1];
                enem_dur[2][2] = enem_dur[2][1];
                enem_dur[0][1] = enem_dur[0][0];
                enem_dur[1][1] = enem_dur[1][0];
                enem_dur[2][1] = enem_dur[2][0];
                enem_dur[0][0] = obtener_tile(&durezas, enem_tilex - 1, enem_tiley - 2, 0);
                enem_dur[1][0] = obtener_tile(&durezas, enem_tilex    , enem_tiley - 2, 0);
                enem_dur[2][0] = obtener_tile(&durezas, enem_tilex + 1, enem_tiley - 2, 0);
            else
                enem_mover_v = 0;
                vel_vert = 0;
                y3 -= enem_offsy * resolution3;
            end
            
        end //movimiento hacia arriba